        |struct rationaalgetal
        | +0: int teller
        | +1: int noemer
        | +2: int gehdeel

main:   HIA.w R0, -1
        BST R0
        HIA R8, R9
        BST R0

        HIA.w R1, 0 | in = 0

        HIA.a R0, RIJ(R1)
        BST R0
        BST R8
        HIA R8, R9
        SBR leesrationaal
        HST R8
        OPT.w R9, 1

        HIA.w R2, 1
forMain:
        VGL.w R2, 100
        VSP GRG, forMainEnd

            HIA.a R0, Q
            BST R0
            BST R8
            HIA R8, R9
            SBR leesrationaal
            HST R8
            OPT.w R9, 1

            HIA.a R0, RIJ(+R1)
            BST R0
            HIA R0, Q+2 | gehdeel
            BST R0
            HIA R0, Q+1 | noemer
            BST R0
            HIA R0, Q+0 | teller
            BST R0
            BST R8
            HIA R8, R9
            SBR vereenvoudig
            HST R8
            OPT.w R9, 4

            HIA.w R3, 0 | j = 0

            mainWhile:
                    HIA R0, 2+RIJ(R1)
                    BST R0
                    HIA R0, 1+RIJ(R1)
                    BST R0
                    HIA R0, 0+RIJ(R1)
                    BST R0
                    HIA R0, 2+RIJ(R3)
                    BST R0
                    HIA R0, 1+RIJ(R3)
                    BST R0
                    HIA R0, 0+RIJ(R3)
                    BST R0
                    BST R8
                    HIA R8, R9
                    SBR isGelijk
                    HST R8
                    OPT.w R9, 6
                    HST R0

                    VGL.w R0, 1
                    VSP GEL, mainWhileEnd
                        OPT.w R3, 1
                        SPR mainWhile
            mainWhileEnd:

            VGL R3, R1
            VSP GEL, ifMainEnd
                AFT.w R1, 1
            ifMainEnd:
        OPT.w R2, 1
        SPR forMain
forMainEnd:
        STP

isGelijk:
        | 1(R8) - 3(R8) = a
        | 4(R8) - 6(R8) = b
        | 7(R8) = retunr
        |if 1(R8) = 4(R8) && 2(R8) = 5(R8) && 3(R8) = 6(R8) THEN return 1
        |ELSE
        |return 0

        HIA R0, 1(R8)
        VGL R0, 4(R8)
        VSP NGEL, isGelijkFalse
        HIA R0, 2(R8)
        VGL R0, 5(R8)
        VSP NGEL, isGelijkFalse
        HIA R0, 3(R8)
        VGL R0, 6(R8)
        VSP NGEL, isGelijkFalse
    isGelijkTrue:
        HIA.w R0, 1
        BIG R0, 7(R8)
        SPR endIsGelijk
    isGelijkFalse:
        HIA.w R0, 0
        BIG R0, 7(R8)
    endIsGelijk:
        KTG

vereenvoudig:

        AFT.w R9,1
        HIA R0, 2(R8) | noemer
        BST R0
        HIA R0, 1(R8) | teller
        BST R0
        BST R8
        HIA R8, R9
        SBR GGD
        HST R8
        OPT.w R9, 2
        HST R1 | deler

        | in.teller = in.teller / deler
        HIA R0, 1(R8)
        DEL R0, R1
        BIG R0, 1(R8)

        | in.noemer = in.noemer / deler
        HIA R0, 2(R8)
        DEL R0, R1
        BIG R0, 2(R8)

        HIA R0, 1(R8) | in.teller
        HIA R2, 2(R8) | in.noemer
        DEL R0, R2 | R0 = in.teller / in.noemer
        HIA R3, 3(R8)
        OPT R0, R3 | R0 = (in.teller / in.noemer) + in.geheel

        |uit->gehdeel = (in.teller / in.noemer) + in.geheel
        HIA R2, 4(R8)
        BIG R0, 2(R2)

        HIA R3, 1(R8) | in.teller
        HIA R4, 2(R8) | in.noemer
        MOD R3, R4
        BIG R3, 0(R2)

        BIG R4, 1(R2)
        KTG
leesrationaal:
        HIA R1, 1(R8)
        LEZ
        BIG R0, 2(R1)
        LEZ
        BIG R0, 0(R1)
        LEZ
        BIG R0, 1(R1)
        KTG
drukrij:
        | in = 1(R8)
        | rij = 2(R8)
        KTG

GGD:    BST R1
        HIA R1, 1(R8) | a
        HIA R0, 2(R8) | b
        MOD R1, R0
        HIA R2, R1 | r
    GGDwhile:  VGL.w R1, 0
            VSP GEL, GGDeWhile
            HIA R1, R0
            HIA R0, R2

            MOD R1, R0
            HIA R2, R1
            SPR GGDwhile
    GGDeWhile:
            BIG R0, 3(R8)
            HST R1
            KTG

RIJ:    RESGR 100 * 3
Q:      RESGR 3
R:      RESGR 3
        EINDPR
